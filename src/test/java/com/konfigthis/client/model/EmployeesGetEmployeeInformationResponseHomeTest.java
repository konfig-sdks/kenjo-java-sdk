/*
 * Kenjo API
 * Before starting to use the Kenjo API, you have to request the API activation for a sandbox or production environment to the Kenjo Customer Success team. After that, an admin user has to go to *Settings > Integrations > API keys*, to generate the **API Key**. Follow the steps described in the **Autentication section** of this document. <br>The API key is needed to request the bearer token. Each endpoint callout requires a valid bearer token in the Authorization header. Once the token is retrieved, it will be useful during the time limit indicated by the 'expiration date'.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for EmployeesGetEmployeeInformationResponseHome
 */
public class EmployeesGetEmployeeInformationResponseHomeTest {
    private final EmployeesGetEmployeeInformationResponseHome model = new EmployeesGetEmployeeInformationResponseHome();

    /**
     * Model tests for EmployeesGetEmployeeInformationResponseHome
     */
    @Test
    public void testEmployeesGetEmployeeInformationResponseHome() {
        // TODO: test EmployeesGetEmployeeInformationResponseHome
    }

    /**
     * Test the property 'maritalStatus'
     */
    @Test
    public void maritalStatusTest() {
        // TODO: test maritalStatus
    }

    /**
     * Test the property 'spouseFirstName'
     */
    @Test
    public void spouseFirstNameTest() {
        // TODO: test spouseFirstName
    }

    /**
     * Test the property 'spouseLastName'
     */
    @Test
    public void spouseLastNameTest() {
        // TODO: test spouseLastName
    }

    /**
     * Test the property 'spouseBirthdate'
     */
    @Test
    public void spouseBirthdateTest() {
        // TODO: test spouseBirthdate
    }

    /**
     * Test the property 'spouseGender'
     */
    @Test
    public void spouseGenderTest() {
        // TODO: test spouseGender
    }

    /**
     * Test the property 'personalEmail'
     */
    @Test
    public void personalEmailTest() {
        // TODO: test personalEmail
    }

    /**
     * Test the property 'personalPhone'
     */
    @Test
    public void personalPhoneTest() {
        // TODO: test personalPhone
    }

    /**
     * Test the property 'personalMobile'
     */
    @Test
    public void personalMobileTest() {
        // TODO: test personalMobile
    }

}
