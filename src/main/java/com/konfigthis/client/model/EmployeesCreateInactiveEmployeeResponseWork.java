/*
 * Kenjo API
 * Before starting to use the Kenjo API, you have to request the API activation for a sandbox or production environment to the Kenjo Customer Success team. After that, an admin user has to go to *Settings > Integrations > API keys*, to generate the **API Key**. Follow the steps described in the **Autentication section** of this document. <br>The API key is needed to request the bearer token. Each endpoint callout requires a valid bearer token in the Authorization header. Once the token is retrieved, it will be useful during the time limit indicated by the 'expiration date'.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeesCreateInactiveEmployeeResponseWork
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeesCreateInactiveEmployeeResponseWork {
  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_OFFICE_ID = "officeId";
  @SerializedName(SERIALIZED_NAME_OFFICE_ID)
  private String officeId;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "departmentId";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private String departmentId;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public static final String SERIALIZED_NAME_WORK_MOBILE = "workMobile";
  @SerializedName(SERIALIZED_NAME_WORK_MOBILE)
  private String workMobile;

  public static final String SERIALIZED_NAME_IS_ASSISTANT = "isAssistant";
  @SerializedName(SERIALIZED_NAME_IS_ASSISTANT)
  private Boolean isAssistant;

  public static final String SERIALIZED_NAME_PROBATION_PERIOD_END = "probationPeriodEnd";
  @SerializedName(SERIALIZED_NAME_PROBATION_PERIOD_END)
  private String probationPeriodEnd;

  public static final String SERIALIZED_NAME_REPORTS_TO_ID = "reportsToId";
  @SerializedName(SERIALIZED_NAME_REPORTS_TO_ID)
  private String reportsToId;

  public static final String SERIALIZED_NAME_WEEKLY_HOURS = "weeklyHours";
  @SerializedName(SERIALIZED_NAME_WEEKLY_HOURS)
  private Double weeklyHours;

  public EmployeesCreateInactiveEmployeeResponseWork() {
  }

  public EmployeesCreateInactiveEmployeeResponseWork companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * The company id of the Kenjo employee.
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50a2db290da29e126a187894", value = "The company id of the Kenjo employee.")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeesCreateInactiveEmployeeResponseWork officeId(String officeId) {
    
    
    
    
    this.officeId = officeId;
    return this;
  }

   /**
   * The office id of the Kenjo employee.
   * @return officeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50a2db290da29e126a187895", value = "The office id of the Kenjo employee.")

  public String getOfficeId() {
    return officeId;
  }


  public void setOfficeId(String officeId) {
    
    
    
    this.officeId = officeId;
  }


  public EmployeesCreateInactiveEmployeeResponseWork departmentId(String departmentId) {
    
    
    
    
    this.departmentId = departmentId;
    return this;
  }

   /**
   * The department id of the Kenjo employee.
   * @return departmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50a2db290da29e126a187896", value = "The department id of the Kenjo employee.")

  public String getDepartmentId() {
    return departmentId;
  }


  public void setDepartmentId(String departmentId) {
    
    
    
    this.departmentId = departmentId;
  }


  public EmployeesCreateInactiveEmployeeResponseWork startDate(String startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The starting date of the employee in ISO format.
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01T00:00:00.000Z", value = "The starting date of the employee in ISO format.")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    
    
    
    this.startDate = startDate;
  }


  public EmployeesCreateInactiveEmployeeResponseWork jobTitle(String jobTitle) {
    
    
    
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * The job title of the employee.
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Actor", value = "The job title of the employee.")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    
    
    
    this.jobTitle = jobTitle;
  }


  public EmployeesCreateInactiveEmployeeResponseWork workPhone(String workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * The work phone of the employee.
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+34 666 70 90 32", value = "The work phone of the employee.")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public EmployeesCreateInactiveEmployeeResponseWork workMobile(String workMobile) {
    
    
    
    
    this.workMobile = workMobile;
    return this;
  }

   /**
   * The work mobile of the employee.
   * @return workMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+34 680 70 90 32", value = "The work mobile of the employee.")

  public String getWorkMobile() {
    return workMobile;
  }


  public void setWorkMobile(String workMobile) {
    
    
    
    this.workMobile = workMobile;
  }


  public EmployeesCreateInactiveEmployeeResponseWork isAssistant(Boolean isAssistant) {
    
    
    
    
    this.isAssistant = isAssistant;
    return this;
  }

   /**
   * Allow to indicate if the employee has or not the assistant role.
   * @return isAssistant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Allow to indicate if the employee has or not the assistant role.")

  public Boolean getIsAssistant() {
    return isAssistant;
  }


  public void setIsAssistant(Boolean isAssistant) {
    
    
    
    this.isAssistant = isAssistant;
  }


  public EmployeesCreateInactiveEmployeeResponseWork probationPeriodEnd(String probationPeriodEnd) {
    
    
    
    
    this.probationPeriodEnd = probationPeriodEnd;
    return this;
  }

   /**
   * The probation period of the employee. Format YYYY-MM-DDThh:mm:ss.000Z.
   * @return probationPeriodEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-06-01T00:00:00.000Z", value = "The probation period of the employee. Format YYYY-MM-DDThh:mm:ss.000Z.")

  public String getProbationPeriodEnd() {
    return probationPeriodEnd;
  }


  public void setProbationPeriodEnd(String probationPeriodEnd) {
    
    
    
    this.probationPeriodEnd = probationPeriodEnd;
  }


  public EmployeesCreateInactiveEmployeeResponseWork reportsToId(String reportsToId) {
    
    
    
    
    this.reportsToId = reportsToId;
    return this;
  }

   /**
   * The Kenjo employee id of the user to whom the employee reports. The employee id to assign can be an active or inactive user. Trying to assign the own employee id or the id of someone who is already reporting will arise an error.
   * @return reportsToId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50a2db290da29e126a1878523", value = "The Kenjo employee id of the user to whom the employee reports. The employee id to assign can be an active or inactive user. Trying to assign the own employee id or the id of someone who is already reporting will arise an error.")

  public String getReportsToId() {
    return reportsToId;
  }


  public void setReportsToId(String reportsToId) {
    
    
    
    this.reportsToId = reportsToId;
  }


  public EmployeesCreateInactiveEmployeeResponseWork weeklyHours(Double weeklyHours) {
    
    
    
    
    this.weeklyHours = weeklyHours;
    return this;
  }

  public EmployeesCreateInactiveEmployeeResponseWork weeklyHours(Integer weeklyHours) {
    
    
    
    
    this.weeklyHours = weeklyHours.doubleValue();
    return this;
  }

   /**
   * The number of weekly hours that an employee works. Combined with the work schedule allows to determine the day hours. This field is required and must be equals or greater than 1.
   * @return weeklyHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "40", value = "The number of weekly hours that an employee works. Combined with the work schedule allows to determine the day hours. This field is required and must be equals or greater than 1.")

  public Double getWeeklyHours() {
    return weeklyHours;
  }


  public void setWeeklyHours(Double weeklyHours) {
    
    
    
    this.weeklyHours = weeklyHours;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeesCreateInactiveEmployeeResponseWork instance itself
   */
  public EmployeesCreateInactiveEmployeeResponseWork putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeesCreateInactiveEmployeeResponseWork employeesCreateInactiveEmployeeResponseWork = (EmployeesCreateInactiveEmployeeResponseWork) o;
    return Objects.equals(this.companyId, employeesCreateInactiveEmployeeResponseWork.companyId) &&
        Objects.equals(this.officeId, employeesCreateInactiveEmployeeResponseWork.officeId) &&
        Objects.equals(this.departmentId, employeesCreateInactiveEmployeeResponseWork.departmentId) &&
        Objects.equals(this.startDate, employeesCreateInactiveEmployeeResponseWork.startDate) &&
        Objects.equals(this.jobTitle, employeesCreateInactiveEmployeeResponseWork.jobTitle) &&
        Objects.equals(this.workPhone, employeesCreateInactiveEmployeeResponseWork.workPhone) &&
        Objects.equals(this.workMobile, employeesCreateInactiveEmployeeResponseWork.workMobile) &&
        Objects.equals(this.isAssistant, employeesCreateInactiveEmployeeResponseWork.isAssistant) &&
        Objects.equals(this.probationPeriodEnd, employeesCreateInactiveEmployeeResponseWork.probationPeriodEnd) &&
        Objects.equals(this.reportsToId, employeesCreateInactiveEmployeeResponseWork.reportsToId) &&
        Objects.equals(this.weeklyHours, employeesCreateInactiveEmployeeResponseWork.weeklyHours)&&
        Objects.equals(this.additionalProperties, employeesCreateInactiveEmployeeResponseWork.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, officeId, departmentId, startDate, jobTitle, workPhone, workMobile, isAssistant, probationPeriodEnd, reportsToId, weeklyHours, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeesCreateInactiveEmployeeResponseWork {\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    officeId: ").append(toIndentedString(officeId)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    workMobile: ").append(toIndentedString(workMobile)).append("\n");
    sb.append("    isAssistant: ").append(toIndentedString(isAssistant)).append("\n");
    sb.append("    probationPeriodEnd: ").append(toIndentedString(probationPeriodEnd)).append("\n");
    sb.append("    reportsToId: ").append(toIndentedString(reportsToId)).append("\n");
    sb.append("    weeklyHours: ").append(toIndentedString(weeklyHours)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("companyId");
    openapiFields.add("officeId");
    openapiFields.add("departmentId");
    openapiFields.add("startDate");
    openapiFields.add("jobTitle");
    openapiFields.add("workPhone");
    openapiFields.add("workMobile");
    openapiFields.add("isAssistant");
    openapiFields.add("probationPeriodEnd");
    openapiFields.add("reportsToId");
    openapiFields.add("weeklyHours");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeesCreateInactiveEmployeeResponseWork
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeesCreateInactiveEmployeeResponseWork.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeesCreateInactiveEmployeeResponseWork is not found in the empty JSON string", EmployeesCreateInactiveEmployeeResponseWork.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("officeId") != null && !jsonObj.get("officeId").isJsonNull()) && !jsonObj.get("officeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `officeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("officeId").toString()));
      }
      if ((jsonObj.get("departmentId") != null && !jsonObj.get("departmentId").isJsonNull()) && !jsonObj.get("departmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `departmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("departmentId").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonNull()) && !jsonObj.get("workPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone").toString()));
      }
      if ((jsonObj.get("workMobile") != null && !jsonObj.get("workMobile").isJsonNull()) && !jsonObj.get("workMobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workMobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workMobile").toString()));
      }
      if ((jsonObj.get("probationPeriodEnd") != null && !jsonObj.get("probationPeriodEnd").isJsonNull()) && !jsonObj.get("probationPeriodEnd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `probationPeriodEnd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("probationPeriodEnd").toString()));
      }
      if ((jsonObj.get("reportsToId") != null && !jsonObj.get("reportsToId").isJsonNull()) && !jsonObj.get("reportsToId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportsToId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportsToId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeesCreateInactiveEmployeeResponseWork.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeesCreateInactiveEmployeeResponseWork' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeesCreateInactiveEmployeeResponseWork> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeesCreateInactiveEmployeeResponseWork.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeesCreateInactiveEmployeeResponseWork>() {
           @Override
           public void write(JsonWriter out, EmployeesCreateInactiveEmployeeResponseWork value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeesCreateInactiveEmployeeResponseWork read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeesCreateInactiveEmployeeResponseWork instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeesCreateInactiveEmployeeResponseWork given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeesCreateInactiveEmployeeResponseWork
  * @throws IOException if the JSON string is invalid with respect to EmployeesCreateInactiveEmployeeResponseWork
  */
  public static EmployeesCreateInactiveEmployeeResponseWork fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeesCreateInactiveEmployeeResponseWork.class);
  }

 /**
  * Convert an instance of EmployeesCreateInactiveEmployeeResponseWork to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

